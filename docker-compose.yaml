version: '3.8'

services:
  database:
    image: postgres:16.2
    environment: 
      - ENVIROMENT=$ENVIRONMENT
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    container_name: database
    restart: always
    volumes:
      - ./database/postgres-$ENVIRONMENT.conf:/etc/postgresql/postgresql.conf
      - ./database/source_data:/source_data
      - ./database/init_scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      db_network:
        aliases:
          - database
  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     db_network:
  #       aliases:
  #         - adminer

  # mlflow:
  #   image: ghcr.io/mlflow/mlflow
  #   command: mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/artifacts --host 0.0.0.0
  #   ports:
  #     - "5000:5000"
  #   env_file:
  #     - .env
  #   networks:
  #     - mlflow_network
  #     - db_network
#app:
#    build:
#      context: app
#      dockerfile: Dockerfile
#      args:
#        - FASTAPI_PORT
#    volumes:
#      - ./app:/app
#      - ./frontend:/frontend
#    ports:
#      - "80:80"
#    env_file:
#      - .env
#    depends_on:
#      - mlflow
#    networks:
#      - mlflow_network
#  frontend:
#    build:
#      context: frontend
#      dockerfile: Dockerfile
#    command: ["streamlit", "run", "Home.py", "--server.port", "8501", "--server.address", "0.0.0.0"]
#    volumes:
#      - ./frontend:/frontend
#    ports:
#      - "8501:8501"
#    env_file:
#      - .env
#    depends_on:
#      - app
#      - mlflow
#    networks:
#      - mlflow_network
networks:
  db_network:
    driver: bridge
  mlflow_network:
    driver: bridge
