name: Master's Project | Build Figures for Paper

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
      # Install Poetry (if build-tool == poetry or pip needs it)
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "HOME/.local/bin" >> $GITHUB_PATH

      # Generate requirements.txt from pyproject.toml (pip only)
      - name: Generate requirements.txt from pyproject.toml
        if: always()
        run: |
          set -e
          # Attempt to generate requirements.txt using uv
          uv pip-compile pyproject.toml -o requirements.txt || (
            echo "uv failed, attempting with Poetry..."
            # Install Poetry
            curl -sSL https://install.python-poetry.org | python3 -
            echo "${HOME}/.local/bin" >> $GITHUB_PATH
            # Generate requirements.txt using Poetry
            poetry export -f requirements.txt --output requirements.txt --without-hashes
          )
          # Check if Poetry's lock file is more up to date
          if [[ pyproject.toml -nt poetry.lock ]]; then
            echo "Poetry dependencies are more up to date. Regenerating requirements.txt using Poetry..."
            poetry export -f requirements.txt --output requirements.txt --without-hashes
          fi
      
      - name: Check Lock File
        run: uvx poetry check

      - name: Load Cached Virtualenv
        id: load-cached-virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Get Dataset
        run: uv run get-data

    # - name: Run ETL
    #   run: uv run pipe-etl

    # - name: Upload Dataset
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: dataset
    #     path: data
